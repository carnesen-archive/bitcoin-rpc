---

- name: abandonTransaction
  description: Abandon an in-wallet transaction and its descendants, allowing their inputs to be respent
  parameters:
    - name: txid

- name: addMultiSigAddress
  description: Add a multisignature address to the wallet, returning an address associated with the keys provided
  parameters:
    - name: nRequired
      description: The number (m) of required signatures out of the n keys or addresses
      type: number

    - name: keysOrAddresses
      description: An array of base58check-encoded private keys or addresses
      type: array
      itemType: string

    - name: account

- name: addNode
  description: Attempts add, remove or connect once to a node
  parameters:
    - name: host

    - name: command
      description: What to do with the node (add, remove, or onetry)
      type: string

- name: addWitnessAddress
  description: Add a witness address for a script (with pubkey or redeem script known)
  parameters:
    - name: address

- name: backupWallet
  description: Safely copies wallet.dat to destination
  parameters:
    - name: destination
      type: string
      description: Can be a directory or a path with filename

- name: bumpFee
  description: Replace an unconfirmed wallet transaction that signaled RBF with a new transaction that pays a higher fee
  parameters:
    - name: txid

    - name: options
      description: Additional options
      type: object

- name: clearBanned
  description: Clear the list of banned nodes

- name: createMultiSig
  description: Create a P2SH multi-signature address
  parameters:
    - name: nRequired
      description: Minimum number (m) of signatures required to spend this m-of-n multisig script
      type: number

    - name: keysOrAddresses
      description: Array of keys or addresses against which signature will be checked
      type: array
      itemType: string

- name: createRawTransaction
  description: Create an unsigned serialized transaction that spends a previous output to a new output
  parameters:
    - name: inputs
      description: Array of objects to be used as an input to the transaction
      type: array
      itemType: object

- name: decodeRawTransaction
  description: Parses the serialized transaction provided and returns an object
  parameters:
    - name: transaction

- name: decodeScript
  description: Decode a hex-encoded P2SH redeem script
  parameters:
    - name: script

- name: disconnectNode
  description: Disconnect from the specified node
  parameters:
    - name: host

- name: dumpPrivKey
  description: Get the wallet-import-format (WIP) private key corresponding to an address
  parameters:
    - name: address

- name: dumpWallet
  description: Dumps all wallet keys in a human-readable format.
  parameters:
    - name: destination
      type: string
      description: Filesystem path to which to write the key file

- name: encryptWallet
  description: Encrypt the wallet with a passphrase
  parameters:
    - name: passphrase
      type: string

- name: estimateFee
  description: Estimate the transaction fee per kilobyte for inclusion within the specified number of blocks
  parameters:
    - name: nBlocks
      description: Maximum number of blocks a transaction should have to wait before getting into a block
      type: number

- name: estimatePriority
  description: Estimate the priority (coin age) that a transaction needs in order to be included within the specified number of blocks as a free high-priority transaction

- name: fundRawTransaction
  description: Add inputs to a transaction until it has enough in value to meet its out value
  parameters:
    - name: transaction

    - name: options
      description: Additional options
      type: object

- name: generate
  description: Generates blocks
  parameters:
    - name: nBlocks
      description: Number of blocks to generate
      type: number

    - name: maxTries
      description: The maximum number of iterations that are tried
      type: number

- name: generateToAddress
  description: Mine blocks immediately to the specified address
  parameters:
    - name: nBlocks
      description: The number of blocks to generate
      type: number

    - name: address

    - name: maxTries
      description: The maximum number of iterations to create the specified number of blocks
      type: number

- name: getAccount
  description: Get the account associated with the specified address
  parameters:
    - name: address

- name: getAccountAddress
  description: Get the current address for receiving payments to the specified account
  parameters:
    - name: account

- name: getAddedNodeInfo
  description: Get information about the specified added node, or all added nodes.
  parameters:
    - name: verbose

    - name: host

- name: getAddressesByAccount
  description: Get the list of addresses for the specified account
  parameters:
    - name: account

- name: getBalance
  description: Get the balance of an account or if account="*" the total across all accounts
  parameters:
    - name: account

    - name: minConfirmations

    - name: includeWatchOnly

- name: getBestBlockHash
  description: Get header hash of the most recent block in the best blockchain

- name: getBlock
  description: Get block as a JSON object or as a serialized block
  parameters:
    - name: hash

    - name: verbose

- name: getBlockChainInfo
  description: Get information about blockchain processing

- name: getBlockCount
  description: Get the number of blocks in the best blockchain

- name: getBlockHash
  description: Get the header hash of a block at the given height in the best blockchain
  parameters:
    - name: height

- name: getBlockHeader
  description: Get the block header with the specified header hash
  parameters:
    - name: hash

    - name: verbose

- name: getBlockTemplate
  description: Get a block template or proposal for use with mining software
  parameters:
    - name: options
      description: Options to use for creating the block template
      type: object

- name: getChainTips
  description: Get information about the highest-height block (tip) of each local block chain

- name: getConnectionCount
  description: Get the number of connections to other nodes

- name: getDifficulty
  description: Get the current proof-of-work difficulty as a multiple of the minimum

- name: getGenerate
  description: Whether (true) or not (false) Bitcoin Core is currently mining

- name: getHashesPerSec
  description: Recent hashes per second performance measurement (0 if off)

- name: getInfo
  description: Get state information about the server

- name: getMemoryInfo
  description: Get information about memory usage

- name: getMemPoolAncestors
  description: If txid is in the mempool, returns all in-mempool ancestors
  parameters:
    - name: txid

    - name: verbose

- name: getMemPoolDescendants
  description: If txid is in the mempool, returns all in-mempool descendants
  parameters:
    - name: txid

    - name: verbose

- name: getMemPoolEntry
  description: Get mempool data for given transaction
  parameters:
    - name: txid

- name: getMemPoolInfo
  description: Get details on the active state of the transaction memory pool

- name: getMiningInfo
  description: Get mining-related information

- name: getNetTotals
  description: Get information about network traffic

- name: getNetworkHashPs
  description: Get the estimated network hashes per second based on the last n blocks at the specified height
  parameters:
    - name: nBlocks
      description: Number of recent blocks to average over. Default 120. -1 for since last difficulty change.
      type: number

    - name: height

- name: getNetworkInfo
  description: Get information about P2P networking status

- name: getNewAddress
  description: Get a new Bitcoin address for receiving payments
  parameters:
    - name: account

- name: getPeerInfo
  description: Returns information about each connected peer

- name: getRawChangeAddress
  description: Get a new address for receiving change

- name: getRawMemPool
  description: Get list of transactions in the memory pool
  parameters:
    - name: verbose

- name: getRawTransaction
  description: Get raw transaction data
  parameters:
    - name: txid

    - name: verbose

- name: getReceivedByAccount
  description: Returns the total amount received to address in the account specified
  parameters:
    - name: account

    - name: minConfirmations

- name: getReceivedByAddress
  description: Get the total amount received by the given address
  parameters:
    - name: address

    - name: minConfirmations

- name: getTransaction
  description: Get detailed information about in-wallet transaction
  parameters:
    - name: txid

    - name: includeWatchOnly

- name: getTxOut
  description: Get details about an unspent transaction output (UTXO)
  parameters:
    - name: txid

    - name: vout

    - name: includeUnconfirmed
      type: boolean
      description: Set to true to include unconfirmed transactions from the memory pool

- name: getTxOutProof
  description: Get a hex-encoded proof that one or more specified transactions were included in the specified block
  parameters:
    - name: txids

    - name: hash

- name: getTxOutSetInfo
  description: Get details about the unspent transaction result set

- name: getUnconfirmedBalance
  description: Get the server's total unconfirmed balance

- name: getWalletInfo
  description: Get information about the wallet state

- name: getWork
  description: Removed in 0.10.0

- name: help
  description: List all available RPC commands or get help for the specified RPC
  parameters:
    - name: methodName
      description: name of the method or omit for a list of all methods and brief usage
      type: string

- name: importAddress
  description: Adds an address or script (in hex) that can be watched
  parameters:
    - name: addressOrScript
      description: Bitcoin address or script
      type: string

    - name: account

    - name: rescan

- name: importMulti
  description: Import addresses or scripts (with private keys, public keys, or P2SH redeem scripts)
  parameters:
    - name: imports
      description: Array of objects to be imported
      type: array
      itemType: object

    - name: options
      description: Options regarding the import
      type: object

- name: importPrivKey
  description: Add a private key (as returned by dumpPrivKey) to your wallet.
  parameters:
    - name: key

    - name: account

    - name: rescan

- name: importPrunedFunds
  description: Import funds without the need of a rescan for use with pruned wallets
  parameters:
    - name: transaction

    - name: txOutProof

- name: importWallet
  description: Import keys from a wallet dump file (see DumpWallet).
  parameters:
    - name: filename
      description: Relative path of the wallet file
      type: string

- name: keyPoolRefill
  description: Fill the cache of unused pre-generated keys (the key pool)
  parameters:
    - name: newSize
      type: number
      description: The new size of the key pool

- name: listAccounts
  description: List accounts and their balances
  parameters:
    - name: minConfirmations

    - name: includeWatchOnly

- name: listAddressGroupings
  description: Lists groups of addresses which have had their common ownership made public

- name: listBanned
  description: List all banned IPs/Subnets

- name: listLockUnspent
  description: Get a list of temporarily unspendable (locked) outputs.

- name: listReceivedByAccount
  description: List balances by account
  parameters:
    - name: minConfirmations

    - name: includeEmpty

    - name: includeWatchOnly

- name: listReceivedByAddress
  description: List balances by receiving address
  parameters:
    - name: minConfirmations

    - name: includeEmpty

    - name: includeWatchOnly

- name: listSinceBlock
  description: Get all transactions in blocks since block blockHash
  parameters:
    - name: hash

    - name: minConfirmations

    - name: includeWatchOnly

- name: listTransactions
  description: Get the most recent transactions that affect the wallet
  parameters:
    - name: account

    - name: count
      description: The number of transactions to return
      type: number

    - name: skip
      description: The number of transactions to skip
      type: number

    - name: includeWatchOnly

- name: listUnspent
  description: Get an array of unspent transaction outputs belonging to this wallet
  parameters:
    - name: minConfirmations

    - name: maxConfirmations
      description: The maximum confirmations to filter
      type: number

    - name: addresses

- name: lockUnspent
  description: Temporarily lock or unlock specified transaction outputs
  parameters:
    - name: unlock
      description: Whether to unlock (true) or lock (false) the specified transactions
      type: boolean

    - name: outputs
      description: Array of outputs to lock or unlock
      type: array
      itemType: object

- name: move
  description: Move a specified amount from one account to another using an off-block-chain transaction
  parameters:
    - name: fromAccount
      description: The name of the account to move funds from
      type: string

    - name: toAccount
      description: The name of the account to move funds to
      type: string

    - name: amount

    - name: unused
      description: This parameter is not used. If provided, can be any integer
      type: number

    - name: comment

- name: ping
  description: Request that a ping be sent to all connected nodes to measure ping time

- name: preciousBlock
  description: Treat a block as if it were received before others with the same work
  parameters:
    - name: hash

- name: prioritiseTransaction
  description: Prioritise a transaction by adding virutal priority or fee
  parameters:
    - name: txid

    - name: priority
      description: The priority to add or subtract
      type: number

    - name: fee
      description: The fee to add or subtract in satoshis
      type: number

- name: pruneBlockChain
  description: Prune the block chain up to a specified height or timestamp
  parameters:
    - name: heightOrTimestamp
      description: The block height or Unix timestamp to prune up to
      type: number

- name: removePrunedFunds
  description: Delete the specified transaction from the wallet
  parameters:
    - name: txid

- name: sendFrom
  description: Spend an amount from a local account to a bitcoin address
  parameters:
    - name: account

    - name: address

    - name: amount

    - name: minConfirmations
      description: Only use funds with at least this many confirmations
      type: number

    - name: comment

    - name: commentTo
      description: A comment to store the name of the recipient
      type: string

- name: sendMany
  description: Create and broadcast a transaction that sends outputs to multiple addresses
  parameters:
    - name: account

    - name: outputs
      description: "An object of shape { address1: amount1, ... }"
      type: object

    - name: minConfirmations

    - name: comment

- name: sendRawTransaction
  description: Submit a serialized transaction to local node and network
  parameters:
    - name: transaction

    - name: allowHighFees
      description: true to allow an abnormally high transaction fee, otherwise false (the default)
      type: boolean

- name: sendToAddress
  description: Spend an amount to the given address
  parameters:
    - name: address

    - name: amount

    - name: comment

    - name: commentTo
      description: A comment to store the name of the recipient
      type: string

- name: setAccount
  description: Put the specified address into the specified account
  parameters:
    - name: address

    - name: account

- name: setBan
  description: Add or remove a IP/Subnet from the banned list
  parameters:
    - name: host

    - name: command
      description: add or remove
      type: string

- name: setGenerate
  description: Turn generation on or off
  parameters:
    - name: value
      description: Whether to turn generation on (true) or off (false)
      type: boolean

    - name: nProcessors
      description: Limit number of processors (-1 for unlimited)
      type: number

- name: setNetworkActive
  description: Disable or enable all P2P network activity
  parameters:
    - name: value
      description: Whether activity is enabled (true) or disabled (false)
      type: boolean

- name: setTxFee
  description: Set the transaction fee rate
  parameters:
    - name: value
      description: New value of fee rate in amount per kB
      type: number

- name: signMessage
  description: Sign a message with the private key of the specified address
  parameters:
    - name: address

    - name: message
      description: The message to sign
      type: string

- name: signMessageWithPrivKey
  description: Sign a message with the specified private key
  parameters:
    - name: key

    - name: message
      description: The message to sign
      type: string

- name: signRawTransaction
  description: Sign a transaction using a wallet key or the one provided
  parameters:
    - name: transaction

    - name: dependencies
      description: The previous outputs being spent by this transaction
      type: object

    - name: keys

    - name: sigHashType
      description: One of ALL, NONE, SINGLE, ALL|ANYONECANPAY, NONE|ANYONECANPAY, or SINGLE|ANYONECANPAY
      type: string

- name: stop
  description: Safely shut down the Bitcoin server

- name: submitBlock
  description: Attempts to submit new block to network.
  parameters:
    - name: block

- name: validateAddress
  description: Get information about the specified address
  parameters:
    - name: address

- name: verifyChain
  description: Verifies the blockchain database
  parameters:
    - name: level
      description: How thorough the block verification is (0-4)
      type: number

    - name: nBlocks
      description: The number of blocks to check (0 for all)
      type: number

- name: verifyMessage
  description: Verify a signed message
  parameters:
    - name: address

    - name: signature
      description: The signature created by the signer
      type: string

    - name: message

- name: verifyTxOutProof
  description: Verify that a proof points to one or more transactions in a block
  parameters:
    - name: txOutProof

- name: walletLock
  description: Remove the wallet encryption key from memory, locking the wallet

- name: walletPassphrase
  description: Store the wallet decryption key in memory for the specified number of seconds
  parameters:
    - name: passphrase

    - name: duration
      description: The number of seconds after which the secret will be deleted from memory
      type: number

- name: walletPassphraseChange
  description: Change the wallet passphrase
  parameters:
    - name: passphrase

    - name: newPassphrase
      description: The new passphrase
      type: string
